[
    {
        "label": "Page",
        "importPath": "pyppeteer.page",
        "description": "pyppeteer.page",
        "isExtraImport": true,
        "detail": "pyppeteer.page",
        "documentation": {}
    },
    {
        "label": "Browser",
        "importPath": "pyppeteer.browser",
        "description": "pyppeteer.browser",
        "isExtraImport": true,
        "detail": "pyppeteer.browser",
        "documentation": {}
    },
    {
        "label": "asyncio",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "asyncio",
        "description": "asyncio",
        "detail": "asyncio",
        "documentation": {}
    },
    {
        "label": "Coroutine",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Coroutine",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Any",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "launch",
        "importPath": "pyppeteer",
        "description": "pyppeteer",
        "isExtraImport": true,
        "detail": "pyppeteer",
        "documentation": {}
    },
    {
        "label": "stealth",
        "importPath": "pyppeteer_stealth",
        "description": "pyppeteer_stealth",
        "isExtraImport": true,
        "detail": "pyppeteer_stealth",
        "documentation": {}
    },
    {
        "label": "NetworkError",
        "importPath": "pyppeteer.errors",
        "description": "pyppeteer.errors",
        "isExtraImport": true,
        "detail": "pyppeteer.errors",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "CommandError",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "BaseCommand",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "CommandError",
        "importPath": "django.core.management.base",
        "description": "django.core.management.base",
        "isExtraImport": true,
        "detail": "django.core.management.base",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "aiohttp",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "aiohttp",
        "description": "aiohttp",
        "detail": "aiohttp",
        "documentation": {}
    },
    {
        "label": "Manga",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Chapter",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "MangaUser",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Manga",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "AgeRestriction",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "MangaType",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Moderated",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Team",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Genre",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Publisher",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "MangaStatus",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "ScanlateStatus",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "People",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Branch",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "AgeRestriction",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "MangaType",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Moderated",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Team",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Genre",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Publisher",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "People",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "MangaStatus",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "ScanlateStatus",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Manga",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "MangaUser",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Branch",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Page",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Chapter",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "importPath": "manga.models",
        "description": "manga.models",
        "isExtraImport": true,
        "detail": "manga.models",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.shortcuts",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "NavigableString",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "PageElement",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "Tag",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "users.managers",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "users.managers",
        "description": "users.managers",
        "detail": "users.managers",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "importPath": "users.managers",
        "description": "users.managers",
        "isExtraImport": true,
        "detail": "users.managers",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "users.models",
        "description": "users.models",
        "isExtraImport": true,
        "detail": "users.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "gettext_lazy",
        "importPath": "django.utils.translation",
        "description": "django.utils.translation",
        "isExtraImport": true,
        "detail": "django.utils.translation",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Parser",
        "kind": 6,
        "importPath": "monster.manga.management.commands.parser",
        "description": "monster.manga.management.commands.parser",
        "peekOfCode": "class Parser:\n    def __init__(self) -> None:\n        self.browser = None\n        self.manga_parser = MangaParser()\n    async def initialize_browser(self):\n        self.browser = await launch(headless=True)\n    async def close_browser(self):\n        assert isinstance(self.browser, Browser)\n        await self.browser.close()\n    async def parse_link(self, url):",
        "detail": "monster.manga.management.commands.parser",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "monster.manga.management.commands.parser",
        "description": "monster.manga.management.commands.parser",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Closes the specified poll for voting'\n    async def main(self):\n        urls = [f'https://mangalib.me/api/v2/comments?type=chapter&post_id=86908&order=best&page={i+1}&chapterPage=1&user_id=425502' for i in range(3)]\n        URL = 'https://mangalib.me/dice-roll?section=chapters&ui=425502'\n        URL = 'https://mangalib.me/adabana?section=chapters&ui=425502'\n        URL = 'https://mangalib.me/chainsaw-man?section=info&ui=425502'\n        parser = Parser()\n        await parser.initialize_browser()\n        res = await parser.manga_parse(URL)",
        "detail": "monster.manga.management.commands.parser",
        "documentation": {}
    },
    {
        "label": "_api",
        "kind": 5,
        "importPath": "monster.manga.management.commands.parser",
        "description": "monster.manga.management.commands.parser",
        "peekOfCode": "_api = [\n    'https://mangalib.me/api/v2/comments?type=chapter&post_id=2551247&order=best&page=1&chapterPage=26',\n    'https://mangalib.me/api/v2/test',\n    'https://mangalib.me/api/comments/branch?comment_id={id}',\n    'https://lib.social/api/forum/discussion?category=all&subscription=0&page=1&sort=newest',\n    'https://mangalib.me/user?comm_id=173519921&section=comments',\n    'https://mangalib.me/similar/7965?type=1',\n    \"https://api.lib.social/api/manga/shingeki-no-kyojin?fields[]=background&fields[]=eng_name&fields[]=otherNames&fields[]=summary&fields[]=releaseDate&fields[]=type_id&fields[]=caution&fields[]=views&fields[]=close_view&fields[]=rate_avg&fields[]=rate&fields[]=genres&fields[]=tags&fields[]=teams&fields[]=authors&fields[]=publisher&fields[]=userRating&fields[]=moderated&fields[]=metadata&fields[]=metadata.count&fields[]=metadata.close_comments&fields[]=manga_status_id&fields[]=chap_count&fields[]=status_id&fields[]=artists&fields[]=format\",\n    'https://api.lib.social/api/manga/247--shingeki-no-kyojin/relations',\n    'https://api.lib.social/api/manga/247--shingeki-no-kyojin/similar',",
        "detail": "monster.manga.management.commands.parser",
        "documentation": {}
    },
    {
        "label": "_url",
        "kind": 5,
        "importPath": "monster.manga.management.commands.parser",
        "description": "monster.manga.management.commands.parser",
        "peekOfCode": "_url = 'https://mangalib.me/naruto?section=chapters'\nURL = 'https://mangalib.me/api/v2/comments?type=chapter&post_id=86908&order=best&page=1&chapterPage=1&user_id=425502'\nURL = 'https://mangalib.me/naruto?section=info&ui=425502'\nclass Parser:\n    def __init__(self) -> None:\n        self.browser = None\n        self.manga_parser = MangaParser()\n    async def initialize_browser(self):\n        self.browser = await launch(headless=True)\n    async def close_browser(self):",
        "detail": "monster.manga.management.commands.parser",
        "documentation": {}
    },
    {
        "label": "URL",
        "kind": 5,
        "importPath": "monster.manga.management.commands.parser",
        "description": "monster.manga.management.commands.parser",
        "peekOfCode": "URL = 'https://mangalib.me/api/v2/comments?type=chapter&post_id=86908&order=best&page=1&chapterPage=1&user_id=425502'\nURL = 'https://mangalib.me/naruto?section=info&ui=425502'\nclass Parser:\n    def __init__(self) -> None:\n        self.browser = None\n        self.manga_parser = MangaParser()\n    async def initialize_browser(self):\n        self.browser = await launch(headless=True)\n    async def close_browser(self):\n        assert isinstance(self.browser, Browser)",
        "detail": "monster.manga.management.commands.parser",
        "documentation": {}
    },
    {
        "label": "URL",
        "kind": 5,
        "importPath": "monster.manga.management.commands.parser",
        "description": "monster.manga.management.commands.parser",
        "peekOfCode": "URL = 'https://mangalib.me/naruto?section=info&ui=425502'\nclass Parser:\n    def __init__(self) -> None:\n        self.browser = None\n        self.manga_parser = MangaParser()\n    async def initialize_browser(self):\n        self.browser = await launch(headless=True)\n    async def close_browser(self):\n        assert isinstance(self.browser, Browser)\n        await self.browser.close()",
        "detail": "monster.manga.management.commands.parser",
        "documentation": {}
    },
    {
        "label": "Parser",
        "kind": 6,
        "importPath": "monster.manga.management.commands.parser_api",
        "description": "monster.manga.management.commands.parser_api",
        "peekOfCode": "class Parser:\n    def __init__(self, url:str='') -> None:\n        self.main_url = url\n        self.clear_url = self._clean_url(self.main_url)\n        self.slug = self._get_slug(self.clear_url)\n        self.data_url = self._data_url(self.slug)\n        self.manga_data = False\n        self.death_code = [404]\n    @staticmethod\n    def _clean_url(url:str):",
        "detail": "monster.manga.management.commands.parser_api",
        "documentation": {}
    },
    {
        "label": "Command",
        "kind": 6,
        "importPath": "monster.manga.management.commands.parser_api",
        "description": "monster.manga.management.commands.parser_api",
        "peekOfCode": "class Command(BaseCommand):\n    help = 'Closes the specified poll for voting'\n    async def main(self):\n        url = 'https://test-front.mangalib.me/ru/manga/7965--chainsaw-man?section=info'\n        #parser = Parser(url)\n        #print(parser.clear_url)\n        #print(parser.data_url)\n        #assert await parser.parse_manga()\n        #for page in range(60, 755, 1):\n        #    logging.info(f'Начат парсинг {page} страницы')",
        "detail": "monster.manga.management.commands.parser_api",
        "documentation": {}
    },
    {
        "label": "manga_urls_generator",
        "kind": 2,
        "importPath": "monster.manga.management.commands.parser_api",
        "description": "monster.manga.management.commands.parser_api",
        "peekOfCode": "def manga_urls_generator(page:int):\n    response = requests.get(\n        f'https://api.lib.social/api/manga?fields[]=rate&fields[]=rate_avg&fields[]=userBookmark&site_id[]=1&page={page}',\n    )\n    if response.status_code<300:\n        try:\n            for manga in response.json().get('data'):\n                assert isinstance(manga, dict)\n                yield f\"https://test-front.mangalib.me/ru/manga/{manga.get('slug')}\"\n        except Exception as error:",
        "detail": "monster.manga.management.commands.parser_api",
        "documentation": {}
    },
    {
        "label": "console_handler",
        "kind": 5,
        "importPath": "monster.manga.management.commands.parser_api",
        "description": "monster.manga.management.commands.parser_api",
        "peekOfCode": "console_handler = logging.StreamHandler()\nconsole_handler.setLevel(logging.INFO)  # Уровень вывода сообщений\n#formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')\nformatter = logging.Formatter('%(message)s')\nconsole_handler.setFormatter(formatter)\nlogger = logging.getLogger()\nlogger.addHandler(console_handler)\n_api = [\n    'https://mangalib.me/api/v2/comments?type=chapter&post_id=2551247&order=best&page=1&chapterPage=26',\n    'https://mangalib.me/api/v2/test',",
        "detail": "monster.manga.management.commands.parser_api",
        "documentation": {}
    },
    {
        "label": "#formatter",
        "kind": 5,
        "importPath": "monster.manga.management.commands.parser_api",
        "description": "monster.manga.management.commands.parser_api",
        "peekOfCode": "#formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')\nformatter = logging.Formatter('%(message)s')\nconsole_handler.setFormatter(formatter)\nlogger = logging.getLogger()\nlogger.addHandler(console_handler)\n_api = [\n    'https://mangalib.me/api/v2/comments?type=chapter&post_id=2551247&order=best&page=1&chapterPage=26',\n    'https://mangalib.me/api/v2/test',\n    'https://mangalib.me/api/comments/branch?comment_id={id}',\n    'https://lib.social/api/forum/discussion?category=all&subscription=0&page=1&sort=newest',",
        "detail": "monster.manga.management.commands.parser_api",
        "documentation": {}
    },
    {
        "label": "formatter",
        "kind": 5,
        "importPath": "monster.manga.management.commands.parser_api",
        "description": "monster.manga.management.commands.parser_api",
        "peekOfCode": "formatter = logging.Formatter('%(message)s')\nconsole_handler.setFormatter(formatter)\nlogger = logging.getLogger()\nlogger.addHandler(console_handler)\n_api = [\n    'https://mangalib.me/api/v2/comments?type=chapter&post_id=2551247&order=best&page=1&chapterPage=26',\n    'https://mangalib.me/api/v2/test',\n    'https://mangalib.me/api/comments/branch?comment_id={id}',\n    'https://lib.social/api/forum/discussion?category=all&subscription=0&page=1&sort=newest',\n    'https://mangalib.me/user?comm_id=173519921&section=comments',",
        "detail": "monster.manga.management.commands.parser_api",
        "documentation": {}
    },
    {
        "label": "logger",
        "kind": 5,
        "importPath": "monster.manga.management.commands.parser_api",
        "description": "monster.manga.management.commands.parser_api",
        "peekOfCode": "logger = logging.getLogger()\nlogger.addHandler(console_handler)\n_api = [\n    'https://mangalib.me/api/v2/comments?type=chapter&post_id=2551247&order=best&page=1&chapterPage=26',\n    'https://mangalib.me/api/v2/test',\n    'https://mangalib.me/api/comments/branch?comment_id={id}',\n    'https://lib.social/api/forum/discussion?category=all&subscription=0&page=1&sort=newest',\n    'https://mangalib.me/user?comm_id=173519921&section=comments',\n    'https://mangalib.me/similar/7965?type=1',\n    \"https://api.lib.social/api/manga/shingeki-no-kyojin?fields[]=background&fields[]=eng_name&fields[]=otherNames&fields[]=summary&fields[]=releaseDate&fields[]=type_id&fields[]=caution&fields[]=views&fields[]=close_view&fields[]=rate_avg&fields[]=rate&fields[]=genres&fields[]=tags&fields[]=teams&fields[]=authors&fields[]=publisher&fields[]=userRating&fields[]=moderated&fields[]=metadata&fields[]=metadata.count&fields[]=metadata.close_comments&fields[]=manga_status_id&fields[]=chap_count&fields[]=status_id&fields[]=artists&fields[]=format\",",
        "detail": "monster.manga.management.commands.parser_api",
        "documentation": {}
    },
    {
        "label": "_api",
        "kind": 5,
        "importPath": "monster.manga.management.commands.parser_api",
        "description": "monster.manga.management.commands.parser_api",
        "peekOfCode": "_api = [\n    'https://mangalib.me/api/v2/comments?type=chapter&post_id=2551247&order=best&page=1&chapterPage=26',\n    'https://mangalib.me/api/v2/test',\n    'https://mangalib.me/api/comments/branch?comment_id={id}',\n    'https://lib.social/api/forum/discussion?category=all&subscription=0&page=1&sort=newest',\n    'https://mangalib.me/user?comm_id=173519921&section=comments',\n    'https://mangalib.me/similar/7965?type=1',\n    \"https://api.lib.social/api/manga/shingeki-no-kyojin?fields[]=background&fields[]=eng_name&fields[]=otherNames&fields[]=summary&fields[]=releaseDate&fields[]=type_id&fields[]=caution&fields[]=views&fields[]=close_view&fields[]=rate_avg&fields[]=rate&fields[]=genres&fields[]=tags&fields[]=teams&fields[]=authors&fields[]=publisher&fields[]=userRating&fields[]=moderated&fields[]=metadata&fields[]=metadata.count&fields[]=metadata.close_comments&fields[]=manga_status_id&fields[]=chap_count&fields[]=status_id&fields[]=artists&fields[]=format\",\n    'https://api.lib.social/api/manga/247--shingeki-no-kyojin/relations',\n    'https://api.lib.social/api/manga/247--shingeki-no-kyojin/similar',",
        "detail": "monster.manga.management.commands.parser_api",
        "documentation": {}
    },
    {
        "label": "MangaToDb",
        "kind": 6,
        "importPath": "monster.manga.management.commands._api_manga_parser",
        "description": "monster.manga.management.commands._api_manga_parser",
        "peekOfCode": "class MangaToDb:\n    def __init__(self, manga_json:dict[Any, Any]) -> None:\n        self.manga_json: dict = manga_json.get('data', {})\n    @property\n    def href(self):\n        return f'https://test-front.mangalib.me/ru/manga/{self.manga_json.get(\"slug\")}'\n    def show(self):\n        print(json.dumps(self.manga_json, indent=4, ensure_ascii=False))\n    async def create_model(self):\n        manga = Manga.objects.filter(id=self.manga_json.get('id'))",
        "detail": "monster.manga.management.commands._api_manga_parser",
        "documentation": {}
    },
    {
        "label": "BranchToDB",
        "kind": 6,
        "importPath": "monster.manga.management.commands._api_manga_parser",
        "description": "monster.manga.management.commands._api_manga_parser",
        "peekOfCode": "class BranchToDB:\n    def __init__(self, branchs_json:dict[Any, Any]) -> None:\n        self.branchs_json: dict = branchs_json\n    def show(self):\n        print(json.dumps(self.branchs_json, indent=4, ensure_ascii=False))\n    async def create_model(self):\n        teams = []\n        for team in self.branchs_json.get('teams', []):\n            team, is_create = await Team.objects.aget_or_create(id=team.get('id'), defaults=team)\n            teams.append(team)",
        "detail": "monster.manga.management.commands._api_manga_parser",
        "documentation": {}
    },
    {
        "label": "ChaptersToDb",
        "kind": 6,
        "importPath": "monster.manga.management.commands._api_manga_parser",
        "description": "monster.manga.management.commands._api_manga_parser",
        "peekOfCode": "class ChaptersToDb:\n    def __init__(self, chapters_json:dict[Any, Any], manga:Manga) -> None:\n        self.chapters_json: dict = chapters_json.get('data', [])\n        self.manga = manga\n    def show(self):\n        print(json.dumps(self.chapters_json, indent=4, ensure_ascii=False))\n        return json.dumps(self.chapters_json, indent=4, ensure_ascii=False)\n    async def create_model(self, data:dict[Any, Any]):\n        branches = []\n        for branche in data.get('branches', []):",
        "detail": "monster.manga.management.commands._api_manga_parser",
        "documentation": {}
    },
    {
        "label": "MangaParser",
        "kind": 6,
        "importPath": "monster.manga.management.commands._manga_parser",
        "description": "monster.manga.management.commands._manga_parser",
        "peekOfCode": "class MangaParser:\n    def __init__(self) -> None:\n        pass\n    def _style_to_href(self, style:str):\n        assert isinstance(style, str)\n        href = re.search(r\"\\(.*?\\)\", style)\n        if isinstance(href, re.Match):\n            return href[0][1:href[0].index(')')].replace('?', '')\n        return False\n    def _add_img(self, result_data:dict[str, Any], soup:BeautifulSoup):",
        "detail": "monster.manga.management.commands._manga_parser",
        "documentation": {}
    },
    {
        "label": "cookies",
        "kind": 5,
        "importPath": "monster.manga.management.commands._options",
        "description": "monster.manga.management.commands._options",
        "peekOfCode": "cookies = {\n    '_ym_uid': '1700672134433078668',\n    '_ym_d': '1700672134',\n    'remember_web_59ba36addc2b2f9401580f014c7f58ea4e30989d': 'eyJpdiI6IlRKUlRCQ0VDTFBmSVdHQ29XdkxDcGc9PSIsInZhbHVlIjoiV3dhdk1tUm5UVStieU1CaTRnRGxmT2FBRjlBb0dBamV2NzBvbW9WaktrcC9KYnM0RXpUbW5RTUJDaytycStoSGV6akVqOUYxbFF1Vm9wY2dBNWl2ekIrbEhJYU9pM05HWkZKRE9TNm92ZHI0Vis2RmtyaXBsbTcxa2FDVm9lYmwxOVg4RFFnNHFSOGFSMnN5K1ZYbHhicC9TdTdkR3ZQRDIyZ3R1RThIUE9xQWZxRFA1WU81WStNa3JOdDM4cC81M0hZYWhsdWVaSW1sTmZGbEk2RklSVWpYZWtNcThXRjFna1RtdGM2RVNGZz0iLCJtYWMiOiJhZjg4M2JjMzc3NjE4OWE4MDQxYjU4OTY3MDUxOWM1NjQ3NWYwYmUyZjI3N2Q4YzkyZmM2MTg3Y2RkNzc5OTUyIiwidGFnIjoiIn0%3D',\n    '_ga_SF8S8RTHBE': 'GS1.1.1704764584.6.0.1704764584.60.0.0',\n    '_ga': 'GA1.1.1798067509.1700672135',\n    '_count': 'eyJpdiI6Ik43WitnR3dBTkc2M2FiT2dHR2VZaEE9PSIsInZhbHVlIjoiN2JvNGhRazhwWnlneXJoQisrNFFORkc5ZC8vRDJwemVJRXVjZlZxQmt5TldWbHZxNkEvU2p4THRhSmZCSlk0cCIsIm1hYyI6IjE1ODBlZjQwMTYyNzA2ZjU1YzliY2RjYWU0YmVkMTYxNGRiZTBiYjBjYmNjNzRhYjA3YmEyZmEwZmU4MmZjMTYiLCJ0YWciOiIifQ%3D%3D',\n    'XSRF-TOKEN': 'eyJpdiI6InRPdlNGTm1xUnpGUHA4RGFkcjBrRlE9PSIsInZhbHVlIjoiSzMzeTlVclJSeGx3WDVCS3crWFc2NlpCdmZjdEJ3eWFHT2swaUF3blVhcE45WlB4RFFpM0FlZDVHb2phQU41ZlplSFlYUXRMclpuY1ZFekpOTGNCUmtJbFc3bVgyd3RxSHpKVkNraEJXSjRCUit1SXZTQ1BaSXNZWkZMQnVwZUwiLCJtYWMiOiJmMTA1ZTUwYmEzMjA4Yzg3MTQ3OTlhMzM3OGM1MzBiNzQxYWEzMDA3OTQ5NzM0YThkOGUxM2M2N2M5OTQwZDI5IiwidGFnIjoiIn0%3D',\n    'mangalib_session': 'eyJpdiI6IkJwVVcwbzdPMGtBVUx1R0JSYmM1amc9PSIsInZhbHVlIjoid29kNEE2amNramJnY1Jjbkt5N1N0aTBJbW04cVlCSE95NnBmZUhBcVk1b3BrVUJnQ1AyR3ZhV3lBdllWTlB3NU1pa1NGY3VTTGNteHFsT0hoRG5FRi9PaGw5empFVlIra3RsU1E0WjBtemRXWTZpc01RdjdWaDRIQW1Zb0pkZUMiLCJtYWMiOiJhZjEzYjEyOTJmMGUwYzU3NmEzOTZjNTYwNDgzMDAxZmYwYmIxMWJjNTA3MWI0NDhjYzQyM2Q2MTI0YjFjMzYyIiwidGFnIjoiIn0%3D',\n}",
        "detail": "monster.manga.management.commands._options",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "monster.manga.management.commands._options",
        "description": "monster.manga.management.commands._options",
        "peekOfCode": "headers = {\n    'authority': 'mangalib.me',\n    'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',\n    'accept-language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',\n    'cache-control': 'no-cache',\n    # 'cookie': '_ym_uid=1700672134433078668; _ym_d=1700672134; remember_web_59ba36addc2b2f9401580f014c7f58ea4e30989d=eyJpdiI6IlRKUlRCQ0VDTFBmSVdHQ29XdkxDcGc9PSIsInZhbHVlIjoiV3dhdk1tUm5UVStieU1CaTRnRGxmT2FBRjlBb0dBamV2NzBvbW9WaktrcC9KYnM0RXpUbW5RTUJDaytycStoSGV6akVqOUYxbFF1Vm9wY2dBNWl2ekIrbEhJYU9pM05HWkZKRE9TNm92ZHI0Vis2RmtyaXBsbTcxa2FDVm9lYmwxOVg4RFFnNHFSOGFSMnN5K1ZYbHhicC9TdTdkR3ZQRDIyZ3R1RThIUE9xQWZxRFA1WU81WStNa3JOdDM4cC81M0hZYWhsdWVaSW1sTmZGbEk2RklSVWpYZWtNcThXRjFna1RtdGM2RVNGZz0iLCJtYWMiOiJhZjg4M2JjMzc3NjE4OWE4MDQxYjU4OTY3MDUxOWM1NjQ3NWYwYmUyZjI3N2Q4YzkyZmM2MTg3Y2RkNzc5OTUyIiwidGFnIjoiIn0%3D; _ga_SF8S8RTHBE=GS1.1.1704764584.6.0.1704764584.60.0.0; _ga=GA1.1.1798067509.1700672135; _count=eyJpdiI6Ik43WitnR3dBTkc2M2FiT2dHR2VZaEE9PSIsInZhbHVlIjoiN2JvNGhRazhwWnlneXJoQisrNFFORkc5ZC8vRDJwemVJRXVjZlZxQmt5TldWbHZxNkEvU2p4THRhSmZCSlk0cCIsIm1hYyI6IjE1ODBlZjQwMTYyNzA2ZjU1YzliY2RjYWU0YmVkMTYxNGRiZTBiYjBjYmNjNzRhYjA3YmEyZmEwZmU4MmZjMTYiLCJ0YWciOiIifQ%3D%3D; XSRF-TOKEN=eyJpdiI6InRPdlNGTm1xUnpGUHA4RGFkcjBrRlE9PSIsInZhbHVlIjoiSzMzeTlVclJSeGx3WDVCS3crWFc2NlpCdmZjdEJ3eWFHT2swaUF3blVhcE45WlB4RFFpM0FlZDVHb2phQU41ZlplSFlYUXRMclpuY1ZFekpOTGNCUmtJbFc3bVgyd3RxSHpKVkNraEJXSjRCUit1SXZTQ1BaSXNZWkZMQnVwZUwiLCJtYWMiOiJmMTA1ZTUwYmEzMjA4Yzg3MTQ3OTlhMzM3OGM1MzBiNzQxYWEzMDA3OTQ5NzM0YThkOGUxM2M2N2M5OTQwZDI5IiwidGFnIjoiIn0%3D; mangalib_session=eyJpdiI6IkJwVVcwbzdPMGtBVUx1R0JSYmM1amc9PSIsInZhbHVlIjoid29kNEE2amNramJnY1Jjbkt5N1N0aTBJbW04cVlCSE95NnBmZUhBcVk1b3BrVUJnQ1AyR3ZhV3lBdllWTlB3NU1pa1NGY3VTTGNteHFsT0hoRG5FRi9PaGw5empFVlIra3RsU1E0WjBtemRXWTZpc01RdjdWaDRIQW1Zb0pkZUMiLCJtYWMiOiJhZjEzYjEyOTJmMGUwYzU3NmEzOTZjNTYwNDgzMDAxZmYwYmIxMWJjNTA3MWI0NDhjYzQyM2Q2MTI0YjFjMzYyIiwidGFnIjoiIn0%3D',\n    'dnt': '1',\n    'pragma': 'no-cache',\n    'referer': 'https://www.google.com/',\n    'sec-ch-ua': '\"Not A(Brand\";v=\"99\", \"Google Chrome\";v=\"121\", \"Chromium\";v=\"121\"',",
        "detail": "monster.manga.management.commands._options",
        "documentation": {}
    },
    {
        "label": "params",
        "kind": 5,
        "importPath": "monster.manga.management.commands._options",
        "description": "monster.manga.management.commands._options",
        "peekOfCode": "params = {\n    'section': 'info',\n    'ui': '425502',\n}",
        "detail": "monster.manga.management.commands._options",
        "documentation": {}
    },
    {
        "label": "headers",
        "kind": 5,
        "importPath": "monster.manga.management.commands._request_to_json",
        "description": "monster.manga.management.commands._request_to_json",
        "peekOfCode": "headers = {\n    'authority': 'api.lib.social',\n    'accept': '*/*',\n    'accept-language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',\n    'cache-control': 'no-cache',\n    'content-type': 'application/json',\n    'dnt': '1',\n    'origin': 'https://test-front.mangalib.me',\n    'pragma': 'no-cache',\n    'referer': 'https://test-front.mangalib.me/',",
        "detail": "monster.manga.management.commands._request_to_json",
        "documentation": {}
    },
    {
        "label": "params",
        "kind": 5,
        "importPath": "monster.manga.management.commands._request_to_json",
        "description": "monster.manga.management.commands._request_to_json",
        "peekOfCode": "params = {\n    'page': '1',\n    'post_id': '969339',\n    'post_page': '1',\n    'post_type': 'chapter',\n    'sort_by': 'votes_up',\n    'sort_type': 'desc',\n}\nresponse = requests.get('https://api.lib.social/api/comments', params=params, headers=headers)\njsonn = json.dumps(response.json(), indent=4, ensure_ascii=False)",
        "detail": "monster.manga.management.commands._request_to_json",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "monster.manga.management.commands._request_to_json",
        "description": "monster.manga.management.commands._request_to_json",
        "peekOfCode": "response = requests.get('https://api.lib.social/api/comments', params=params, headers=headers)\njsonn = json.dumps(response.json(), indent=4, ensure_ascii=False)\nprint(jsonn)\nwith open('C:\\\\Users\\\\Shamrock\\\\Desktop\\\\mangalib_monster обход блокировки ботов\\\\monster\\\\manga\\\\management\\\\commands\\\\comments_json_api.json', 'w+', encoding='UTF-8') as f:\n    f.write(json.dumps(response.json(), indent=4, ensure_ascii=False))",
        "detail": "monster.manga.management.commands._request_to_json",
        "documentation": {}
    },
    {
        "label": "jsonn",
        "kind": 5,
        "importPath": "monster.manga.management.commands._request_to_json",
        "description": "monster.manga.management.commands._request_to_json",
        "peekOfCode": "jsonn = json.dumps(response.json(), indent=4, ensure_ascii=False)\nprint(jsonn)\nwith open('C:\\\\Users\\\\Shamrock\\\\Desktop\\\\mangalib_monster обход блокировки ботов\\\\monster\\\\manga\\\\management\\\\commands\\\\comments_json_api.json', 'w+', encoding='UTF-8') as f:\n    f.write(json.dumps(response.json(), indent=4, ensure_ascii=False))",
        "detail": "monster.manga.management.commands._request_to_json",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0001_initial",
        "description": "monster.manga.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='AgeRestriction',\n            fields=[\n                ('id', models.SmallIntegerField(primary_key=True, serialize=False, unique=True)),\n                ('label', models.CharField(max_length=8, unique=True)),",
        "detail": "monster.manga.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0002_mangauser_page_chapter_branch_comment",
        "description": "monster.manga.migrations.0002_mangauser_page_chapter_branch_comment",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='MangaUser',\n            fields=[\n                ('id', models.PositiveIntegerField(primary_key=True, serialize=False, unique=True)),\n                ('username', models.CharField(max_length=255, unique=True)),",
        "detail": "monster.manga.migrations.0002_mangauser_page_chapter_branch_comment",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0003_rename_othernames_manga_other_names_and_more",
        "description": "monster.manga.migrations.0003_rename_othernames_manga_other_names_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0002_mangauser_page_chapter_branch_comment'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='manga',\n            old_name='otherNames',\n            new_name='other_names',\n        ),",
        "detail": "monster.manga.migrations.0003_rename_othernames_manga_other_names_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0004_rename_publisher_manga_publishers",
        "description": "monster.manga.migrations.0004_rename_publisher_manga_publishers",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0003_rename_othernames_manga_other_names_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='manga',\n            old_name='publisher',\n            new_name='publishers',\n        ),",
        "detail": "monster.manga.migrations.0004_rename_publisher_manga_publishers",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0005_alter_manga_summary",
        "description": "monster.manga.migrations.0005_alter_manga_summary",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0004_rename_publisher_manga_publishers'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='manga',\n            name='summary',\n            field=models.TextField(null=True),\n        ),",
        "detail": "monster.manga.migrations.0005_alter_manga_summary",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0006_alter_manga_close_view_alter_manga_id_and_more",
        "description": "monster.manga.migrations.0006_alter_manga_close_view_alter_manga_id_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0005_alter_manga_summary'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='manga',\n            name='close_view',\n            field=models.PositiveSmallIntegerField(),\n        ),",
        "detail": "monster.manga.migrations.0006_alter_manga_close_view_alter_manga_id_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0007_alter_people_name_alter_people_slug",
        "description": "monster.manga.migrations.0007_alter_people_name_alter_people_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0006_alter_manga_close_view_alter_manga_id_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='people',\n            name='name',\n            field=models.CharField(max_length=255),\n        ),",
        "detail": "monster.manga.migrations.0007_alter_people_name_alter_people_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0008_alter_people_alt_name_alter_people_rus_name",
        "description": "monster.manga.migrations.0008_alter_people_alt_name_alter_people_rus_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0007_alter_people_name_alter_people_slug'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='people',\n            name='alt_name',\n            field=models.CharField(max_length=255, null=True),\n        ),",
        "detail": "monster.manga.migrations.0008_alter_people_alt_name_alter_people_rus_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0009_alter_publisher_name_alter_publisher_rus_name_and_more",
        "description": "monster.manga.migrations.0009_alter_publisher_name_alter_publisher_rus_name_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0008_alter_people_alt_name_alter_people_rus_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='publisher',\n            name='name',\n            field=models.CharField(max_length=255),\n        ),",
        "detail": "monster.manga.migrations.0009_alter_publisher_name_alter_publisher_rus_name_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0010_alter_chapter_manga_id_alter_comment_post_page_and_more",
        "description": "monster.manga.migrations.0010_alter_chapter_manga_id_alter_comment_post_page_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0009_alter_publisher_name_alter_publisher_rus_name_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='chapter',\n            name='manga_id',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='manga.manga'),\n        ),",
        "detail": "monster.manga.migrations.0010_alter_chapter_manga_id_alter_comment_post_page_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0011_alter_branch_branch_id",
        "description": "monster.manga.migrations.0011_alter_branch_branch_id",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0010_alter_chapter_manga_id_alter_comment_post_page_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='branch',\n            name='branch_id',\n            field=models.PositiveIntegerField(null=True),\n        ),",
        "detail": "monster.manga.migrations.0011_alter_branch_branch_id",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0012_alter_chapter_name",
        "description": "monster.manga.migrations.0012_alter_chapter_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0011_alter_branch_branch_id'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='chapter',\n            name='name',\n            field=models.CharField(max_length=255, null=True),\n        ),",
        "detail": "monster.manga.migrations.0012_alter_chapter_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.manga.migrations.0013_alter_mangauser_username",
        "description": "monster.manga.migrations.0013_alter_mangauser_username",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('manga', '0012_alter_chapter_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='mangauser',\n            name='username',\n            field=models.CharField(max_length=255),\n        ),",
        "detail": "monster.manga.migrations.0013_alter_mangauser_username",
        "documentation": {}
    },
    {
        "label": "MangaConfig",
        "kind": 6,
        "importPath": "monster.manga.apps",
        "description": "monster.manga.apps",
        "peekOfCode": "class MangaConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'manga'",
        "detail": "monster.manga.apps",
        "documentation": {}
    },
    {
        "label": "AgeRestriction",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class AgeRestriction(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)\n    label = models.CharField(max_length=8, unique=True)\n    class Meta:\n        verbose_name_plural = 'Возрастное ограничение'\n        verbose_name = 'Возрастное ограничение'\n    def __str__(self):\n        return f'{self.label}'\nclass MangaType(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "MangaType",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class MangaType(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)\n    label = models.CharField(max_length=32, unique=True)\n    class Meta:\n        verbose_name_plural = 'Тип произведения'\n        verbose_name = 'Тип произведения'\n    def __str__(self):\n        return f'{self.label}'\nclass Moderated(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Moderated",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Moderated(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)\n    label = models.CharField(max_length=32, unique=True)\n    class Meta:\n        verbose_name_plural = 'Статус модерации'\n        verbose_name = 'Статус модерации'\n    def __str__(self):\n        return f'{self.label}'\nclass Team(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Team",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Team(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)\n    slug = models.CharField(max_length=255)\n    slug_url = models.CharField(max_length=255, unique=True)\n    name = models.CharField(max_length=255)\n    cover = models.JSONField()\n    details = models.JSONField(null=True)\n    class Meta:\n        verbose_name_plural = 'Переводчики'\n        verbose_name = 'Переводчики'",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Genre",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Genre(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)\n    name = models.CharField(max_length=64, unique=True)\n    class Meta:\n        verbose_name_plural = 'Жанр'\n        verbose_name = 'Жанр'\n    def __str__(self):\n        return f'{self.name}'\nclass Tag(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Tag",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Tag(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)\n    name = models.CharField(max_length=64, unique=True)\n    class Meta:\n        verbose_name_plural = 'Тег'\n        verbose_name = 'Тег'\n    def __str__(self):\n        return f'{self.name}'\nclass Publisher(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Publisher",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Publisher(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)\n    slug = models.CharField(max_length=255)\n    slug_url = models.CharField(max_length=255, unique=True)\n    name = models.CharField(max_length=255)\n    rus_name = models.CharField(max_length=255, null=True)\n    cover = models.JSONField(null=True)\n    subscription = models.JSONField(null=True)\n    class Meta:\n        verbose_name_plural = 'Издатель'",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "People",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class People(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)\n    slug = models.CharField(max_length=255)\n    slug_url = models.CharField(max_length=255, unique=True)\n    name = models.CharField(max_length=255)\n    rus_name = models.CharField(max_length=255, null=True)\n    alt_name = models.CharField(max_length=255, null=True)\n    cover = models.JSONField(null=True)\n    confirmed = models.CharField(max_length=255, null=True)\n    subscription = models.JSONField(null=True)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "MangaStatus",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class MangaStatus(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)\n    label = models.CharField(max_length=32, unique=True)\n    class Meta:\n        verbose_name_plural = 'Статус выпуска манги'\n        verbose_name = 'Статус выпуска манги'\n    def __str__(self):\n        return f'{self.label}'\nclass ScanlateStatus(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "ScanlateStatus",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class ScanlateStatus(models.Model):\n    id = models.SmallIntegerField(primary_key=True, null=False, unique=True)\n    label = models.CharField(max_length=32, unique=True)\n    class Meta:\n        verbose_name_plural = 'Статус выпуска перевода'\n        verbose_name = 'Статус выпуска перевода'\n    def __str__(self):\n        return f'{self.label}'\nclass Manga(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Manga",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Manga(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)\n    name = models.CharField(max_length=255)\n    rus_name = models.CharField(max_length=255)\n    eng_name = models.CharField(max_length=255)\n    other_names = models.JSONField()\n    slug = models.CharField(max_length=255)\n    slug_url = models.CharField(max_length=255)\n    cover = models.JSONField()\n    background = models.JSONField()",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "MangaUser",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class MangaUser(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)\n    username = models.CharField(max_length=255, null=False, unique=False)\n    avatar = models.JSONField(null=True, default=None)\n    class Meta:\n        verbose_name_plural = 'Пользователь'\n        verbose_name = 'Пользователь'\n    def __str__(self):\n        return f'{self.username}'\nclass Branch(models.Model):",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Branch",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Branch(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)\n    branch_id = models.PositiveIntegerField(null=True)\n    created_at = models.DateTimeField(null=False)\n    teams = models.ManyToManyField(Team)\n    user = models.ForeignKey(MangaUser, on_delete=models.CASCADE)\n    class Meta:\n        verbose_name_plural = 'Ветка'\n        verbose_name = 'Ветка'\n    def __str__(self):",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Chapter",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Chapter(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)\n    manga_id = models.ForeignKey(Manga, on_delete=models.CASCADE, related_name='chapters')\n    teams = models.ManyToManyField(Team)\n    created_at = models.DateTimeField(null=True)\n    moderated = models.ForeignKey(Moderated, on_delete=models.SET_NULL, null=True)\n    type = models.CharField(max_length=32, null=True)\n    index = models.PositiveSmallIntegerField(null=False)\n    item_number = models.PositiveSmallIntegerField(null=False)\n    volume = models.CharField(max_length=32, null=False)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Page",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Page(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)\n    chapter_id = models.ForeignKey(Chapter, on_delete=models.CASCADE, related_name='pages')\n    image = models.CharField(max_length=255, null=True)\n    slug = models.PositiveSmallIntegerField(null=False)\n    external = models.PositiveSmallIntegerField(null=False)\n    chunks = models.PositiveSmallIntegerField(null=False)\n    chapter_id = models.PositiveIntegerField(null=False, unique=True)\n    created_at = models.DateTimeField(null=False)\n    updated_at = models.DateTimeField(null=False)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "Comment",
        "kind": 6,
        "importPath": "monster.manga.models",
        "description": "monster.manga.models",
        "peekOfCode": "class Comment(models.Model):\n    id = models.PositiveIntegerField(primary_key=True, null=False, unique=True)\n    comment = models.TextField(null=False)\n    created_at = models.DateTimeField(null=False)\n    comment_level = models.PositiveSmallIntegerField(null=False)\n    parent_comment = models.ForeignKey('Comment', on_delete=models.SET_NULL, null=True, related_name='parent_comment_foreigth_key')\n    root_id = models.ForeignKey('Comment', on_delete=models.SET_NULL, null=True, related_name='root_comment_foreigth_key')\n    post_page = models.ForeignKey(Page, on_delete=models.CASCADE, related_name='pages')\n    user = models.ForeignKey(MangaUser, on_delete=models.CASCADE, related_name='users')\n    votes_up = models.PositiveIntegerField(null=False)",
        "detail": "monster.manga.models",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "monster.monster.asgi",
        "description": "monster.monster.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "monster.monster.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-x7134e7y@h@1zya#oxa$7+h5lrwcf9*!^f3l)4gm%5i)xkiq70'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-x7134e7y@h@1zya#oxa$7+h5lrwcf9*!^f3l)4gm%5i)xkiq70'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'users',",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'users',\n    'manga',\n    'rest_framework',",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'monster.urls'",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "ROOT_URLCONF = 'monster.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "WSGI_APPLICATION = 'monster.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'Mangalib_Monster',\n        'USER': 'root',\n        'PASSWORD': '',\n        'HOST': '127.0.0.1',",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'Mangalib_Monster',\n        'USER': 'root',\n        'PASSWORD': '',\n        'HOST': '127.0.0.1',\n        'PORT': '3306',\n        'OPTIONS': {\n            'charset': 'utf8mb4',",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "monster.monster.settings",
        "description": "monster.monster.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.User'",
        "detail": "monster.monster.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "monster.monster.urls",
        "description": "monster.monster.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n]",
        "detail": "monster.monster.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "monster.monster.wsgi",
        "description": "monster.monster.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "monster.monster.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "monster.users.migrations.0001_initial",
        "description": "monster.users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='User',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "monster.users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "monster.users.apps",
        "description": "monster.users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'",
        "detail": "monster.users.apps",
        "documentation": {}
    },
    {
        "label": "UserManager",
        "kind": 6,
        "importPath": "monster.users.managers",
        "description": "monster.users.managers",
        "peekOfCode": "class UserManager(BaseUserManager):\n    use_in_migrations = True\n    def create_user(self, email, password=None, **extra_fields):\n        if not email:\n            raise ValueError('Users require an email field')\n        email = self.normalize_email(email)\n        user = self.model(email=email, **extra_fields)\n        user.set_password(password)\n        user.save(using=self._db)\n        return user",
        "detail": "monster.users.managers",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "monster.users.models",
        "description": "monster.users.models",
        "peekOfCode": "class User(AbstractUser):\n    email = models.EmailField(_(\"email address\"), blank=False, null=False, unique=True)\n    username = None\n    REQUIRED_FIELDS = []\n    USERNAME_FIELD = 'email'\n    objects = UserManager() \n    class Meta:\n        verbose_name_plural = 'Пользователь'\n        verbose_name = 'Пользователь'\n    def __str__(self):",
        "detail": "monster.users.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "monster.manage",
        "description": "monster.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'monster.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "monster.manage",
        "documentation": {}
    }
]